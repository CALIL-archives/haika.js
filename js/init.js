// Generated by CoffeeScript 1.3.1
var add;

app.init({
  canvas: 'canvas',
  canvas_width: 800,
  canvas_height: 600,
  max_width: 10000,
  max_height: 10000,
  bgurl: 'img/meidai2.png',
  bgopacity: 0.5,
  bgscale: 4
});

app.scale = 1;

add = function(top, left, angle) {
  var shelf;
  if (top == null) {
    top = 300;
  }
  if (left == null) {
    left = 300;
  }
  if (angle == null) {
    angle = 0;
  }
  shelf = new fabric.Shelf({
    count: parseInt($('#count').val()),
    side: $('#side').val(),
    top: top,
    left: left,
    fill: "#CFE2F3",
    stroke: "#000000",
    angle: angle
  });
  return app.add(shelf);
};

setTimeout(function() {
  return addmany();
}, 500);

$(function() {
  var _this = this;
  window.addmany = function() {
    var x, y;
    y = 0;
    while (y < 8) {
      x = 0;
      while (x < 22) {
        add(200 + 400 * y, 100 + 50 * x, 90);
        x++;
      }
      y++;
    }
    app.render();
  };
  $(".add").click(function() {
    add();
    return app.render();
  });
  $(".remove").click(function() {
    return app.remove();
  });
  $(".zoomin").click(function() {
    return app.zoomIn();
  });
  $(".zoomout").click(function() {
    return app.zoomOut();
  });
  $(".zoomreset").click(function() {
    return app.zoomReset();
  });
  $(".bringtofront").click(function() {
    return app.bringToFront();
  });
  $(".toright").click(function() {
    return app.toRight();
  });
  $(".toleft").click(function() {
    return app.toLeft();
  });
  $(".totop").click(function() {
    return app.toTop();
  });
  $(".tobottom").click(function() {
    return app.toBottom();
  });
  $(".rotate").slider({
    min: 0,
    max: 360,
    step: 10,
    value: 0,
    slide: function(event, ui) {
      var activeObject;
      activeObject = app.canvas.getActiveObject();
      if (activeObject) {
        activeObject.angle = ui.value;
        activeObject.setCoords();
        return app.canvas.renderAll();
      }
    }
  });
  $(".save").click(function() {
    return app.save();
  });
  $('canvas').on('mousewheel', function(event) {
    if (event.deltaY === 1) {
      app.zoomIn();
    }
    if (event.deltaY === -1) {
      return app.zoomOut();
    }
  });
  this.shiftKey = false;
  $(document.body).keydown(function(e) {
    return _this.shiftKey = e.shiftKey;
  });
  return $('#canvas').on('doubletap', function(e) {
    if (_this.shiftKey) {
      return _this.zoomOut();
    } else {
      return _this.zoomIn();
    }
  });
});

/*  $(@options.canvas).on 'drag', (e)=>
    if $(".is_visible .btn-primary").find('input').val()=='edit'
      return
    console.log(this, e)
    console.log(this, e.adx)
    if e.orientation=='vertical'
      if e.dx > 1
        @toTop(500)
      if e.dx < -1
        @toBottom(500)
    else
      if e.dy > 1
        @toLeft(500)
      if e.dy < -1
        @toRight(500)
  $(".is_visible input").change ->
    if $(".is_visible .btn-primary").find('input').val()=='move'
        #app.canvas.selection = false
        #app.render()
        $('canvas').css('cursor', 'move')
    if $(".is_visible .btn-primary").find('input').val()=='edit'
        #app.canvas.selection = true
        #app.render()
        $('canvas').css('cursor', 'pointer')
    is_visible = $(this).attr("id")
    buttons = $(this).closest(".btn-group").find(".btn")
    buttons.each (i, e) ->
      $(e).removeClass("btn-primary").removeClass("btn-default")
      if is_visible==$(e).find("input").attr("id")
        $(e).addClass "btn-primary"
      else
        $(e).addClass "btn-default"
*/

